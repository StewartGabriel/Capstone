// //------------------------------------------------------------------------------
// // <auto-generated>
// //     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
// //     version 1.11.0
// //     from Assets/Input.inputactions
// //
// //     Changes to this file may cause incorrect behavior and will be lost if
// //     the code is regenerated.
// // </auto-generated>
// //------------------------------------------------------------------------------

// using System;
// using System.Collections;
// using System.Collections.Generic;
// using UnityEngine.InputSystem;
// using UnityEngine.InputSystem.Utilities;

// public partial class @Input: IInputActionCollection2, IDisposable
// {
//     public InputActionAsset asset { get; }
//     public @Input()
//     {
//         asset = InputActionAsset.FromJson(@"{
//     ""name"": ""Input"",
//     ""maps"": [
//         {
//             ""name"": ""Computer Keyboard"",
//             ""id"": ""0ce47f7a-3871-4806-9146-4da5444bf733"",
//             ""actions"": [
//                 {
//                     ""name"": ""Change"",
//                     ""type"": ""Button"",
//                     ""id"": ""cfff924a-b5f8-4c48-a438-026d8dc05c83"",
//                     ""expectedControlType"": """",
//                     ""processors"": """",
//                     ""interactions"": """",
//                     ""initialStateCheck"": false
//                 }
//             ],
//             ""bindings"": [
//                 {
//                     ""name"": """",
//                     ""id"": ""2eae850a-b369-4d66-a5bb-7d22a1b7c474"",
//                     ""path"": ""<MidiDevice>/note060"",
//                     ""interactions"": """",
//                     ""processors"": """",
//                     ""groups"": """",
//                     ""action"": ""Change"",
//                     ""isComposite"": false,
//                     ""isPartOfComposite"": false
//                 },
//                 {
//                     ""name"": """",
//                     ""id"": ""a93e29ff-39bb-410a-8e8b-bad9fbd67ddd"",
//                     ""path"": ""<Keyboard>/w"",
//                     ""interactions"": ""Press(behavior=2)"",
//                     ""processors"": """",
//                     ""groups"": """",
//                     ""action"": ""Change"",
//                     ""isComposite"": false,
//                     ""isPartOfComposite"": false
//                 },
//                 {
//                     ""name"": """",
//                     ""id"": ""f90c7ab3-614e-424b-9c5c-9f76c330679f"",
//                     ""path"": ""<MidiDevice>/note060"",
//                     ""interactions"": ""Press(behavior=2)"",
//                     ""processors"": """",
//                     ""groups"": """",
//                     ""action"": ""Change"",
//                     ""isComposite"": false,
//                     ""isPartOfComposite"": false
//                 },
//                 {
//                     ""name"": """",
//                     ""id"": ""f01b1566-7381-425b-821c-db776510de5a"",
//                     ""path"": ""<Keyboard>/e"",
//                     ""interactions"": """",
//                     ""processors"": """",
//                     ""groups"": """",
//                     ""action"": ""Change"",
//                     ""isComposite"": false,
//                     ""isPartOfComposite"": false
//                 }
//             ]
//         }
//     ],
//     ""controlSchemes"": []
// }");
//         // Computer Keyboard
//         m_ComputerKeyboard = asset.FindActionMap("Computer Keyboard", throwIfNotFound: true);
//         m_ComputerKeyboard_Change = m_ComputerKeyboard.FindAction("Change", throwIfNotFound: true);
//     }

//     ~@Input()
//     {
//         UnityEngine.Debug.Assert(!m_ComputerKeyboard.enabled, "This will cause a leak and performance issues, Input.ComputerKeyboard.Disable() has not been called.");
//     }

//     public void Dispose()
//     {
//         UnityEngine.Object.Destroy(asset);
//     }

//     public InputBinding? bindingMask
//     {
//         get => asset.bindingMask;
//         set => asset.bindingMask = value;
//     }

//     public ReadOnlyArray<InputDevice>? devices
//     {
//         get => asset.devices;
//         set => asset.devices = value;
//     }

//     public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

//     public bool Contains(InputAction action)
//     {
//         return asset.Contains(action);
//     }

//     public IEnumerator<InputAction> GetEnumerator()
//     {
//         return asset.GetEnumerator();
//     }

//     IEnumerator IEnumerable.GetEnumerator()
//     {
//         return GetEnumerator();
//     }

//     public void Enable()
//     {
//         asset.Enable();
//     }

//     public void Disable()
//     {
//         asset.Disable();
//     }

//     public IEnumerable<InputBinding> bindings => asset.bindings;

//     public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
//     {
//         return asset.FindAction(actionNameOrId, throwIfNotFound);
//     }

//     public int FindBinding(InputBinding bindingMask, out InputAction action)
//     {
//         return asset.FindBinding(bindingMask, out action);
//     }

//     // Computer Keyboard
//     private readonly InputActionMap m_ComputerKeyboard;
//     private List<IComputerKeyboardActions> m_ComputerKeyboardActionsCallbackInterfaces = new List<IComputerKeyboardActions>();
//     private readonly InputAction m_ComputerKeyboard_Change;
//     public struct ComputerKeyboardActions
//     {
//         private @Input m_Wrapper;
//         public ComputerKeyboardActions(@Input wrapper) { m_Wrapper = wrapper; }
//         public InputAction @Change => m_Wrapper.m_ComputerKeyboard_Change;
//         public InputActionMap Get() { return m_Wrapper.m_ComputerKeyboard; }
//         public void Enable() { Get().Enable(); }
//         public void Disable() { Get().Disable(); }
//         public bool enabled => Get().enabled;
//         public static implicit operator InputActionMap(ComputerKeyboardActions set) { return set.Get(); }
//         public void AddCallbacks(IComputerKeyboardActions instance)
//         {
//             if (instance == null || m_Wrapper.m_ComputerKeyboardActionsCallbackInterfaces.Contains(instance)) return;
//             m_Wrapper.m_ComputerKeyboardActionsCallbackInterfaces.Add(instance);
//             @Change.started += instance.OnChange;
//             @Change.performed += instance.OnChange;
//             @Change.canceled += instance.OnChange;
//         }

//         private void UnregisterCallbacks(IComputerKeyboardActions instance)
//         {
//             @Change.started -= instance.OnChange;
//             @Change.performed -= instance.OnChange;
//             @Change.canceled -= instance.OnChange;
//         }

//         public void RemoveCallbacks(IComputerKeyboardActions instance)
//         {
//             if (m_Wrapper.m_ComputerKeyboardActionsCallbackInterfaces.Remove(instance))
//                 UnregisterCallbacks(instance);
//         }

//         public void SetCallbacks(IComputerKeyboardActions instance)
//         {
//             foreach (var item in m_Wrapper.m_ComputerKeyboardActionsCallbackInterfaces)
//                 UnregisterCallbacks(item);
//             m_Wrapper.m_ComputerKeyboardActionsCallbackInterfaces.Clear();
//             AddCallbacks(instance);
//         }
//     }
//     public ComputerKeyboardActions @ComputerKeyboard => new ComputerKeyboardActions(this);
//     public interface IComputerKeyboardActions
//     {
//         void OnChange(InputAction.CallbackContext context);
//     }
// }
